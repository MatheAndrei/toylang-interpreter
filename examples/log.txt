Id: 0
ExeStack: [(string varf;(varf=string("examples/test.in");(openRFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf)))))))))]
SymTable: {}
Heap: {}
Output: []
FileTable: []

Id: 0
ExeStack: [string varf | (varf=string("examples/test.in");(openRFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf))))))))]
SymTable: {}
Heap: {}
Output: []
FileTable: []

Id: 0
ExeStack: [(varf=string("examples/test.in");(openRFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf))))))))]
SymTable: {
	varf -> string(""),
}
Heap: {}
Output: []
FileTable: []

Id: 0
ExeStack: [varf=string("examples/test.in") | (openRFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf)))))))]
SymTable: {
	varf -> string(""),
}
Heap: {}
Output: []
FileTable: []

Id: 0
ExeStack: [(openRFile(varf);(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf)))))))]
SymTable: {
	varf -> string("examples/test.in"),
}
Heap: {}
Output: []
FileTable: []

Id: 0
ExeStack: [openRFile(varf) | (int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf))))))]
SymTable: {
	varf -> string("examples/test.in"),
}
Heap: {}
Output: []
FileTable: []

Id: 0
ExeStack: [(int varc;(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf))))))]
SymTable: {
	varf -> string("examples/test.in"),
}
Heap: {}
Output: []
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [int varc | (readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf)))))]
SymTable: {
	varf -> string("examples/test.in"),
}
Heap: {}
Output: []
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [(readFile(varf,varc);(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf)))))]
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(0),
}
Heap: {}
Output: []
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [readFile(varf,varc) | (print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf))))]
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(0),
}
Heap: {}
Output: []
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [(print(varc);(readFile(varf,varc);(print(varc);closeRFile(varf))))]
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(1),
}
Heap: {}
Output: []
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [print(varc) | (readFile(varf,varc);(print(varc);closeRFile(varf)))]
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(1),
}
Heap: {}
Output: []
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [(readFile(varf,varc);(print(varc);closeRFile(varf)))]
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(1),
}
Heap: {}
Output: [int(1)]
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [readFile(varf,varc) | (print(varc);closeRFile(varf))]
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(1),
}
Heap: {}
Output: [int(1)]
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [(print(varc);closeRFile(varf))]
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(2),
}
Heap: {}
Output: [int(1)]
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [print(varc) | closeRFile(varf)]
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(2),
}
Heap: {}
Output: [int(1)]
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: [closeRFile(varf)]
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(2),
}
Heap: {}
Output: [int(1), int(2)]
FileTable: [string("examples/test.in")]

Id: 0
ExeStack: []
SymTable: {
	varf -> string("examples/test.in"),
	varc -> int(2),
}
Heap: {}
Output: [int(1), int(2)]
FileTable: []

