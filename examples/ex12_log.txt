Id: 11
ExeStack: [(int v;(Ref(int) a;(v=int(10);(new(a,int(20));(fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))));(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a))))))))))))]
SymTable: {}
Heap: {}
Output: []
FileTable: []

Id: 11
ExeStack: [int v | (Ref(int) a;(v=int(10);(new(a,int(20));(fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))));(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a)))))))))))]
SymTable: {}
Heap: {}
Output: []
FileTable: []

Id: 11
ExeStack: [(Ref(int) a;(v=int(10);(new(a,int(20));(fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))));(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a)))))))))))]
SymTable: {
	v -> int(0),
}
Heap: {}
Output: []
FileTable: []

Id: 11
ExeStack: [Ref(int) a | (v=int(10);(new(a,int(20));(fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))));(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a))))))))))]
SymTable: {
	v -> int(0),
}
Heap: {}
Output: []
FileTable: []

Id: 11
ExeStack: [(v=int(10);(new(a,int(20));(fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))));(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a))))))))))]
SymTable: {
	a -> Ref(0, int),
	v -> int(0),
}
Heap: {}
Output: []
FileTable: []

Id: 11
ExeStack: [v=int(10) | (new(a,int(20));(fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))));(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a)))))))))]
SymTable: {
	a -> Ref(0, int),
	v -> int(0),
}
Heap: {}
Output: []
FileTable: []

Id: 11
ExeStack: [(new(a,int(20));(fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))));(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a)))))))))]
SymTable: {
	a -> Ref(0, int),
	v -> int(10),
}
Heap: {}
Output: []
FileTable: []

Id: 11
ExeStack: [new(a,int(20)) | (fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))));(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a))))))))]
SymTable: {
	a -> Ref(0, int),
	v -> int(10),
}
Heap: {}
Output: []
FileTable: []

Id: 11
ExeStack: [(fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))));(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a))))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 11
ExeStack: [fork((Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c))))))))) | (NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a)))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 11
ExeStack: [(NOP;(NOP;(NOP;(NOP;(print(v);print(rH(a)))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 12
ExeStack: [(Ref(int) b;(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c))))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 11
ExeStack: [NOP | (NOP;(NOP;(NOP;(print(v);print(rH(a))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 12
ExeStack: [Ref(int) b | (new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 11
ExeStack: [(NOP;(NOP;(NOP;(print(v);print(rH(a))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 12
ExeStack: [(new(b,int(30));(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c)))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
	b -> Ref(0, int),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 11
ExeStack: [NOP | (NOP;(NOP;(print(v);print(rH(a)))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 12
ExeStack: [new(b,int(30)) | (Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
	b -> Ref(0, int),
}
Heap: {
	1 -> int(20),
}
Output: []
FileTable: []

Id: 11
ExeStack: [(NOP;(NOP;(print(v);print(rH(a)))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
}
Output: []
FileTable: []

Id: 12
ExeStack: [(Ref(Ref(int)) c;(new(c,b);(print(rH(b));print(rH(rH(c))))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
	b -> Ref(2, int),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
}
Output: []
FileTable: []

Id: 11
ExeStack: [NOP | (NOP;(print(v);print(rH(a))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
}
Output: []
FileTable: []

Id: 12
ExeStack: [Ref(Ref(int)) c | (new(c,b);(print(rH(b));print(rH(rH(c)))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
	b -> Ref(2, int),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
}
Output: []
FileTable: []

Id: 11
ExeStack: [(NOP;(print(v);print(rH(a))))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
}
Output: []
FileTable: []

Id: 12
ExeStack: [(new(c,b);(print(rH(b));print(rH(rH(c)))))]
SymTable: {
	a -> Ref(1, int),
	b -> Ref(2, int),
	c -> Ref(0, Ref(int)),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
}
Output: []
FileTable: []

Id: 11
ExeStack: [NOP | (print(v);print(rH(a)))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
}
Output: []
FileTable: []

Id: 12
ExeStack: [new(c,b) | (print(rH(b));print(rH(rH(c))))]
SymTable: {
	a -> Ref(1, int),
	b -> Ref(2, int),
	c -> Ref(0, Ref(int)),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
}
Output: []
FileTable: []

Id: 11
ExeStack: [(print(v);print(rH(a)))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
	3 -> Ref(2, int),
}
Output: []
FileTable: []

Id: 12
ExeStack: [(print(rH(b));print(rH(rH(c))))]
SymTable: {
	a -> Ref(1, int),
	b -> Ref(2, int),
	c -> Ref(3, Ref(int)),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
	3 -> Ref(2, int),
}
Output: []
FileTable: []

Id: 11
ExeStack: [print(v) | print(rH(a))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
	3 -> Ref(2, int),
}
Output: []
FileTable: []

Id: 12
ExeStack: [print(rH(b)) | print(rH(rH(c)))]
SymTable: {
	a -> Ref(1, int),
	b -> Ref(2, int),
	c -> Ref(3, Ref(int)),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
	3 -> Ref(2, int),
}
Output: []
FileTable: []

Id: 11
ExeStack: [print(rH(a))]
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
	3 -> Ref(2, int),
}
Output: [int(10), int(30)]
FileTable: []

Id: 12
ExeStack: [print(rH(rH(c)))]
SymTable: {
	a -> Ref(1, int),
	b -> Ref(2, int),
	c -> Ref(3, Ref(int)),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
	3 -> Ref(2, int),
}
Output: [int(10), int(30)]
FileTable: []

Id: 11
ExeStack: []
SymTable: {
	a -> Ref(1, int),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
	3 -> Ref(2, int),
}
Output: [int(10), int(30), int(20), int(30)]
FileTable: []

Id: 12
ExeStack: []
SymTable: {
	a -> Ref(1, int),
	b -> Ref(2, int),
	c -> Ref(3, Ref(int)),
	v -> int(10),
}
Heap: {
	1 -> int(20),
	2 -> int(30),
	3 -> Ref(2, int),
}
Output: [int(10), int(30), int(20), int(30)]
FileTable: []

